/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package singin.interfaceProfesseur;

import singin.ConsoleBdd;
import singin.DataNotFound;
import singin.Enregistrement;
import singin.EnregistrementJList;
import singin.Lecteur;
import singin.Projet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Mox
 */
public class DetailProjetPanel extends javax.swing.JPanel {

  private GUIprofesseur jFrame;
  private Projet projet;
  private Enregistrement enregistrement;
  private Lecteur lecteur;
  
  private ListSelectionListener lsl;

  private enum ETAT {

	PLAYALL, PLAYONE, STOP
  };
  private ETAT etat;

  /**
   * Creates new form projet_panel
   */
  public DetailProjetPanel() {
	initComponents();

	etat = ETAT.STOP;
	activateStop();
	cacherDetail();

	projet = null;
	enregistrement = null;
	lecteur = null;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    titreGaucheLabel = new javax.swing.JLabel();
    jSeparator1 = new javax.swing.JSeparator();
    jScrollPane1 = new javax.swing.JScrollPane();
    enregistrementsList = new javax.swing.JList();
    enregistrementLabel = new javax.swing.JLabel();
    playAllButton = new javax.swing.JButton();
    stopAllButton = new javax.swing.JButton();
    versionFinaleButton = new javax.swing.JButton();
    fermerButton = new javax.swing.JButton();
    detailEnregistrementPanel = new javax.swing.JPanel();
    nomLabel = new javax.swing.JLabel();
    instrumentLabel = new javax.swing.JLabel();
    dateLabel = new javax.swing.JLabel();
    playOneButton = new javax.swing.JButton();
    stopOneButton = new javax.swing.JButton();
    commentairesLabel = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    commentairesTextArea = new javax.swing.JTextArea();
    titreDroitLabel = new javax.swing.JLabel();

    addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentShown(java.awt.event.ComponentEvent evt) {
        formComponentShown(evt);
      }
    });

    titreGaucheLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    titreGaucheLabel.setText("Tous les enregistrements");

    jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

    enregistrementsList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    enregistrementsList.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent evt) {
        enregistrementsListPropertyChange(evt);
      }
    });
    jScrollPane1.setViewportView(enregistrementsList);

    enregistrementLabel.setText("Selectionnez un enregistrement :");

    playAllButton.setText("Play");
    playAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        playAllButtonActionPerformed(evt);
      }
    });

    stopAllButton.setText("Stop");
    stopAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        stopAllButtonActionPerformed(evt);
      }
    });

    versionFinaleButton.setText("Créer une version finale");

    fermerButton.setText("Fermer le projet");
    fermerButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fermerButtonActionPerformed(evt);
      }
    });

    nomLabel.setText("Prénom Nom");

    instrumentLabel.setText("Instrument");

    dateLabel.setText("Date de l'enregistrement ");

    playOneButton.setText("Play");
    playOneButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        playOneButtonActionPerformed(evt);
      }
    });

    stopOneButton.setText("Stop");
    stopOneButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        stopOneButtonActionPerformed(evt);
      }
    });

    commentairesLabel.setText("Les commentaires : ");

    commentairesTextArea.setColumns(20);
    commentairesTextArea.setRows(5);
    jScrollPane2.setViewportView(commentairesTextArea);

    titreDroitLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    titreDroitLabel.setText("Detail de l'enregistrement");

    javax.swing.GroupLayout detailEnregistrementPanelLayout = new javax.swing.GroupLayout(detailEnregistrementPanel);
    detailEnregistrementPanel.setLayout(detailEnregistrementPanelLayout);
    detailEnregistrementPanelLayout.setHorizontalGroup(
      detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(detailEnregistrementPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(detailEnregistrementPanelLayout.createSequentialGroup()
            .addComponent(nomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(instrumentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(detailEnregistrementPanelLayout.createSequentialGroup()
            .addGroup(detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(commentairesLabel)
              .addComponent(dateLabel))
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailEnregistrementPanelLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailEnregistrementPanelLayout.createSequentialGroup()
                .addComponent(titreDroitLabel)
                .addGap(61, 61, 61))
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailEnregistrementPanelLayout.createSequentialGroup()
                .addComponent(playOneButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopOneButton)))))
        .addContainerGap())
    );
    detailEnregistrementPanelLayout.setVerticalGroup(
      detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(detailEnregistrementPanelLayout.createSequentialGroup()
        .addComponent(titreDroitLabel)
        .addGap(20, 20, 20)
        .addGroup(detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(nomLabel)
          .addComponent(instrumentLabel))
        .addGap(18, 18, 18)
        .addGroup(detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailEnregistrementPanelLayout.createSequentialGroup()
            .addGroup(detailEnregistrementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(stopOneButton)
              .addComponent(playOneButton))
            .addGap(31, 31, 31))
          .addGroup(detailEnregistrementPanelLayout.createSequentialGroup()
            .addComponent(dateLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
            .addComponent(commentairesLabel)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(50, 50, 50))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                  .addGap(90, 90, 90)
                  .addComponent(titreGaucheLabel))
                .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(enregistrementLabel))
                .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(versionFinaleButton)))
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playAllButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopAllButton)))
            .addGap(18, 18, 18)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(detailEnregistrementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 26, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(fermerButton)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jSeparator1)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(titreGaucheLabel)
                .addGap(23, 23, 23)
                .addComponent(enregistrementLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(playAllButton)
                  .addComponent(stopAllButton))
                .addGap(35, 35, 35)
                .addComponent(versionFinaleButton))
              .addComponent(detailEnregistrementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 14, Short.MAX_VALUE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(fermerButton)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void fermerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerButtonActionPerformed
	projet = null;
	enregistrement = null;

	if (lecteur != null && lecteur.isPlay()) {
	  arreterLecture();
	}
	
	cacherDetail();
	enregistrementsList.removeListSelectionListener(lsl);
	jFrame.fermerProjet();
  }//GEN-LAST:event_fermerButtonActionPerformed

  private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
	projet = jFrame.getProjet();
	ListModel<EnregistrementJList> model;
	try {
	  model = ConsoleBdd.getBdd().getEnregistrementsJList(projet.getIdProjet());
	} catch (DataNotFound ex) {
	  Logger.getLogger(DetailProjetPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
  }//GEN-LAST:event_formComponentShown

  private void playAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAllButtonActionPerformed
	switch (etat) {
	  case STOP:
		etat = ETAT.PLAYALL;
		activatePlayAll();
		demarrerLectureAll();
		break;
	  case PLAYALL:
		throw new RuntimeException();
	  case PLAYONE:
		throw new RuntimeException();
	}
  }//GEN-LAST:event_playAllButtonActionPerformed

  private void stopAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopAllButtonActionPerformed
	switch (etat) {
	  case PLAYALL:
		etat = ETAT.STOP;
		activateStop();
		arreterLecture();
		break;
	  case PLAYONE:
		etat = ETAT.STOP;
		activateStop();
		arreterLecture();
		break;
	  case STOP:
		throw new RuntimeException();
	}
  }//GEN-LAST:event_stopAllButtonActionPerformed

  private void enregistrementsListPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_enregistrementsListPropertyChange

  }//GEN-LAST:event_enregistrementsListPropertyChange

  private void playOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playOneButtonActionPerformed
    switch (etat) {
	  case STOP:
		etat = ETAT.PLAYONE;
		activatePlayOne();
		demarrerLectureOne();
		break;
	  case PLAYALL:
		throw new RuntimeException();
	  case PLAYONE:
		throw new RuntimeException();
	}
  }//GEN-LAST:event_playOneButtonActionPerformed

  private void stopOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopOneButtonActionPerformed
    switch (etat) {
	  case PLAYALL:
		etat = ETAT.STOP;
		activateStop();
		arreterLecture();
		break;
	  case PLAYONE:
		etat = ETAT.STOP;
		activateStop();
		arreterLecture();
		break;
	  case STOP:
		throw new RuntimeException();
	}
  }//GEN-LAST:event_stopOneButtonActionPerformed

  public void ouvrirProjet(Projet p) {
	projet = p;
	ListModel<EnregistrementJList> model;
	try {
	  model = ConsoleBdd.getBdd().getEnregistrementsJList(projet.getIdProjet());
	  enregistrementsList.setModel(model);
	  
	  lsl = new ListSelectionListener() {
	  @Override
	  public void valueChanged(ListSelectionEvent lse) {
		enregistrement = ((EnregistrementJList) enregistrementsList.getSelectedValue()).getEnregistrement();
		afficherDetail();
	  }
	};
	enregistrementsList.addListSelectionListener(lsl);
	} catch (DataNotFound ex) {
	  jFrame.fermerProjet();
	  //Logger.getLogger(DetailProjetPanel.class.getName()).log(Level.SEVERE, null, ex);
	}
  }

  public void demarrerLectureAll() {
	lecteur = new Lecteur();
	lecteur.addSamples(projet.getSamples());
	lecteur.play();
  }

  public void demarrerLectureOne() {
	lecteur = new Lecteur();
	lecteur.addSample(enregistrement.getSample());
	lecteur.play();
  }

  public void arreterLecture() {
	lecteur.stop();
	lecteur = null;
  }

  public void afficherDetail() {
	nomLabel.setText(enregistrement.getUser().getPrenom()
			+ " " + enregistrement.getUser().getNom());
	instrumentLabel.setText(enregistrement.getUser().getInstrument());
	detailEnregistrementPanel.setVisible(true);
  }

  public void cacherDetail() {
	detailEnregistrementPanel.setVisible(false);
  }

  private void activatePlayAll() {
	playAllButton.setEnabled(false);
	stopAllButton.setEnabled(true);
	playOneButton.setEnabled(false);
	stopOneButton.setEnabled(false);
  }
  
  private void activatePlayOne(){
	playAllButton.setEnabled(false);
	stopAllButton.setEnabled(false);
	playOneButton.setEnabled(false);
	stopOneButton.setEnabled(true);
  }

  private void activateStop() {
	playAllButton.setEnabled(true);
	stopAllButton.setEnabled(false);
	playOneButton.setEnabled(true);
	stopOneButton.setEnabled(false);
  }

  public void setjFrame(GUIprofesseur jFrame) {
	this.jFrame = jFrame;
  }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel commentairesLabel;
  private javax.swing.JTextArea commentairesTextArea;
  private javax.swing.JLabel dateLabel;
  private javax.swing.JPanel detailEnregistrementPanel;
  private javax.swing.JLabel enregistrementLabel;
  private javax.swing.JList enregistrementsList;
  private javax.swing.JButton fermerButton;
  private javax.swing.JLabel instrumentLabel;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JLabel nomLabel;
  private javax.swing.JButton playAllButton;
  private javax.swing.JButton playOneButton;
  private javax.swing.JButton stopAllButton;
  private javax.swing.JButton stopOneButton;
  private javax.swing.JLabel titreDroitLabel;
  private javax.swing.JLabel titreGaucheLabel;
  private javax.swing.JButton versionFinaleButton;
  // End of variables declaration//GEN-END:variables
}
